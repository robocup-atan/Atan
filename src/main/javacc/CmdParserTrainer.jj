options {
  STATIC = false;
  LOOKAHEAD = 2;
//  FORCE_LA_CHECK = false;
}
PARSER_BEGIN(CmdParserTrainer)
package com.github.robocup_atan.atan.parser.trainer;

//~--- non-JDK imports --------------------------------------------------------

import com.github.robocup_atan.atan.model.enums.Errors;
import com.github.robocup_atan.atan.model.enums.Ok;
import com.github.robocup_atan.atan.model.enums.PlayMode;
import com.github.robocup_atan.atan.model.enums.RefereeMessage;
import com.github.robocup_atan.atan.model.enums.Warning;

import com.github.robocup_atan.atan.model.ActionsTrainer;
import com.github.robocup_atan.atan.model.ControllerTrainer;

//~--- JDK imports ------------------------------------------------------------

import java.io.StringReader;

  public class CmdParserTrainer {

    ControllerTrainer controller;
    ActionsTrainer trainer;

    public void parseSeeCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseHearCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseInitCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseErrorCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseSenseBodyCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseOkCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseWarningCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseServerParamCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parsePlayerParamCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parsePlayerTypeCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
    public void parseChangePlayerTypeCommand (String cmd, ControllerTrainer controller, ActionsTrainer trainer)
        throws ParseException{
    }
}
PARSER_END(CmdParserTrainer)

SKIP: {
  "\t"|"\n"|"\r"|"\""
}
TOKEN :
{
 < B: "b"|"B">|
  < FLAG: "f"|"F">|
  < P: "p"|"P">|
  < L: "l"|"L">|
  < GOAL: "g"|"G">|
  < GOALIE: "goalie">|
  < REFEREE: "referee"|"Referee">|
  < SELF: "self">|
  < VIEW_MODE: "view_mode">|
  < HIGH: "high">|
  < LOW: "low">|
  < WIDE: "wide">|
  < NARROW: "narrow">|
  < NORMAL: "normal">|
  < STAMINA: "stamina">|
  < SPEED: "speed">|
  < HEAD_ANGLE: "head_angle">|
  < KICK: "kick">|
  < DASH: "dash">|
  < TURN: "turn">|
  < SAY: "say">|
  < EYEON: "eye on" >|
  < EYEOFF: "eye off" >|
  < TURN_NECK: "turn_neck">|
  < BEFORE_KICK_OFF: "before_kick_off">|
  < TIME_OVER: "time_over">|
  < PLAY_ON: "play_on">|
  < DROP_BALL: "drop_ball">|
  < KICK_OFF_L: "kick_off_l">|
  < KICK_OFF_R: "kick_off_r">|
  < KICK_IN_L: "kick_in_l">|
  < KICK_IN_R: "kick_in_r">|
  < FREE_KICK_R: "free_kick_r">|
  < FREE_KICK_L: "free_kick_l">|
  < FREE_KICK_FAULT_R: "free_kick_fault_r">|
  < FREE_KICK_FAULT_L: "free_kick_fault_l">|
  < CORNER_KICK_R: "corner_kick_r">|
  < CORNER_KICK_L: "corner_kick_l">|
  < GOAL_KICK_R: "goal_kick_r">|
  < GOAL_KICK_L: "goal_kick_l">|
  < GOAL_R: "goal_r_"(["0"-"9"])+>|
  < GOAL_L: "goal_l_"(["0"-"9"])+>|
  < FOUL_R: "foul_r">|
  < FOUL_L: "foul_l">|
  < OFFSIDE_R: "offside_r">|
  < OFFSIDE_L: "offside_l">|
  < HALF_TIME: "half_time">|
  < TEAM: "team" >|
  < TIME_UP: "time_up">|
  < TIME_UP_WITHOUT_A_TEAM: "time_up_without_a_team">|
  < TIME_EXTENDED: "time_extended">|
  < ILLEGAL_MODE: "illegal_mode">|
  < ILLEGAL_COMMAND_FORM: "illegal_command_form">|
  < ILLEGAL_OBJECT_FORM: "illegal_object_form">|
  < NO_MORE_TEAM_OR_PLAYER: "no_more_team_or_player">|
  < NO_MORE_TEAM_OR_PLAYER_OR_GOALIE: "no_more_team_or_player_or_goalie">|
  < NO_MORE_PLAYER_OR_GOALIE_OR_ILLEGAL_CLIENT_VERSION: "no_more_player_or_goalie_or_illegal_client_version">|	
  < RECONNECT: "reconnect">|
  < UNKNOWN_COMMAND: "unknown_command">|
  < TOO_MANY_MOVES: "too_many_moves">|
  < SAID_TOO_MANY_MESSAGES: "said_too_many_messages">|
  < MOVE: "move">|
  < CHANGE_MODE: "change_mode">|
  < CHECK_BALL: "check_ball">|
  < START: "start">|
  < RECOVER: "recover">|
  < CHANGE_PLAYER_TYPE: "change_player_type">|
  < LOOK: "look">|
  < TEAM_NAMES: "team_names">|
  < TEAM_GRAPHIC: "team_graphic">|
  < NO_TEAM_FOUND: "no_team_found">|
  < NO_SUCH_PLAYER: "no_such_player">|
  < CANNOT_SUB_WHILE_PLAYON: "cannot_sub_while_playon">|
  < NO_SUBS_LEFT: "no_subs_left">|
  < MAX_OF_THAT_TYPE_ON_FIELD: "max_of_that_type_on_field">|
  < CANNOT_CHANGE_GOALIE: "cannot_change_goalie">|
  < CHANGE_VIEW: "change_view">|
  < CATCH: "catch">|
  < ID: "id" >|
  < PLAYER_SPEED_MAX: "player_speed_max" >|
  < STAMINA_INC_MAX: "stamina_inc_max" >|
  < PLAYER_DECAY: "player_decay" >|
  < INERTIA_MOMENT: "inertia_moment" >|
  < PLAYER_SIZE: "player_size" >|
  < KICKABLE_MARGIN: "kickable_margin" >|
  < KICK_RAND: "kick_rand" >|
  < EXTRA_STAMINA: "extra_stamina" >|
  < EFFORT_MAX: "effort_max" >|
  < EFFORT_MIN: "effort_min" >|
  < ALLOW_MULT_DEFAULT_TYPE: "allow_mult_default_type" >|
  < DASH_POWER_RATE_DELTA_MAX: "dash_power_rate_delta_max" >|
  < DASH_POWER_RATE_DELTA_MIN: "dash_power_rate_delta_min" >|
  < EFFORT_MAX_DELTA_FACTOR: "effort_max_delta_factor" >|
  < EFFORT_MIN_DELTA_FACTOR: "effort_min_delta_factor" >|
  < EXTRA_STAMINA_DELTA_MAX: "extra_stamina_delta_max" >|
  < EXTRA_STAMINA_DELTA_MIN: "extra_stamina_delta_min" >|
  < INERTIA_MOMENT_DELTA_FACTOR: "inertia_moment_delta_factor" >|
  < KICK_RAND_DELTA_FACTOR: "kick_rand_delta_factor" >|
  < KICKABLE_MARGIN_DELTA_MAX: "kickable_margin_delta_max" >|
  < KICKABLE_MARGIN_DELTA_MIN: "kickable_margin_delta_min" >|
  < NEW_DASH_POWER_RATE_DELTA_MAX: "new_dash_power_rate_delta_max" >|
  < NEW_DASH_POWER_RATE_DELTA_MIN: "new_dash_power_rate_delta_min" >|
  < NEW_STAMINA_INC_MAX_DELTA_FACTOR: "new_stamina_inc_max_delta_factor" >|
  < PLAYER_DECAY_DELTA_MAX: "player_decay_delta_max" >|
  < PLAYER_DECAY_DELTA_MIN: "player_decay_delta_min" >|
  < PLAYER_SIZE_DELTA_FACTOR: "player_size_delta_factor" >|
  < PLAYER_SPEED_MAX_DELTA_MAX: "player_speed_max_delta_max" >|
  < PLAYER_SPEED_MAX_DELTA_MIN: "player_speed_max_delta_min" >|
  < PLAYER_TYPES: "player_types" >|
  < PT_MAX: "pt_max" >|
  < RANDOM_SEED: "random_seed" >|
  < STAMINA_INC_MAX_DELTA_FACTOR: "stamina_inc_max_delta_factor" >|
  < SUBS_MAX: "subs_max" >|
  < AUDIO_CUT_DIST: "audio_cut_dist" >|
  < AUTO_MODE: "auto_mode" >|
  < BACK_DASH_RATE: "back_dash_rate" >|
  < BACK_PASSES: "back_passes" >|
  < BALL_ACCEL_MAX: "ball_accel_max" >|
  < BALL_DECAY: "ball_decay" >|
  < BALL_RAND: "ball_rand" >|
  < BALL_SIZE: "ball_size" >|
  < BALL_SPEED_MAX: "ball_speed_max" >|
  < BALL_STUCK_AREA: "ball_stuck_area" >|
  < BALL_WEIGHT: "ball_weight" >|
  < CATCH_BAN_CYCLE: "catch_ban_cycle" >|
  < CATCH_PROBABILITY: "catch_probability" >|
  < CATCHABLE_AREA_L: "catchable_area_l" >|
  < CATCHABLE_AREA_W: "catchable_area_w" >|
  < CKICK_MARGIN: "ckick_margin" >|
  < CLANG_ADVICE_WIN: "clang_advice_win" >|
  < CLANG_DEFINE_WIN: "clang_define_win" >|
  < CLANG_DEL_WIN: "clang_del_win" >|
  < CLANG_INFO_WIN: "clang_info_win" >|
  < CLANG_MESS_DELAY: "clang_mess_delay" >|
  < CLANG_MESS_PER_CYCLE: "clang_mess_per_cycle" >|
  < CLANG_META_WIN: "clang_meta_win" >|
  < CLANG_RULE_WIN: "clang_rule_win" >|
  < CLANG_WIN_SIZE: "clang_win_size" >|
  < COACH: "coach" >|
  < COACH_PORT: "coach_port" >|
  < COACH_W_REFEREE: "coach_w_referee" >|
  < CONNECT_WAIT: "connect_wait" >|
  < CONTROL_RADIUS: "control_radius" >|
  < DASH_ANGLE_STEP: "dash_angle_step" >|
  < DASH_POWER_RATE: "dash_power_rate" >|
  < DROP_BALL_TIME: "drop_ball_time" >|
  < EFFORT_DEC: "effort_dec" >|
  < EFFORT_DEC_THR: "effort_dec_thr" >|
  < EFFORT_INC: "effort_inc" >|
  < EFFORT_INC_THR: "effort_inc_thr" >|
  < EFFORT_INIT: "effort_init" >|
  < EXTRA_HALF_TIME: "extra_half_time" >|
  < FORBID_KICK_OFF_OFFSIDE: "forbid_kick_off_offside" >|
  < FREE_KICK_FAULTS: "free_kick_faults" >|
  < FREEFORM_SEND_PERIOD: "freeform_send_period" >|
  < FREEFORM_WAIT_PERIOD: "freeform_wait_period" >|
  < FULLSTATE_L: "fullstate_l" >|
  < FULLSTATE_R: "fullstate_r" >|
  < GAME_LOG_COMPRESSION: "game_log_compression" >|
  < GAME_LOG_DATED: "game_log_dated" >|
  < GAME_LOG_DIR: "game_log_dir" >|
  < GAME_LOG_FIXED: "game_log_fixed" >|
  < GAME_LOG_FIXED_NAME: "game_log_fixed_name" >|
  < GAME_LOG_VERSION: "game_log_version" >|
  < GAME_LOGGING: "game_logging" >|
  < GAME_OVER_WAIT: "game_over_wait" >|
  < GOAL_WIDTH: "goal_width" >|
  < GOALIE_MAX_MOVES: "goalie_max_moves" >|
  < HEAR_DECAY: "hear_decay" >|
  < HEAR_INC: "hear_inc" >|
  < HEAR_MAX:  "hear_max" >|
  < KEEPAWAY: "keepaway" >|
  < KEEPAWAY_LENGTH: "keepaway_length" >|
  < KEEPAWAY_LOG_DATED: "keepaway_log_dated" >|
  < KEEPAWAY_LOG_DIR: "keepaway_log_dir" >|
  < KEEPAWAY_LOG_FIXED: "keepaway_log_fixed" >|
  < KEEPAWAY_LOG_FIXED_NAME: "keepaway_log_fixed_name" >|
  < KEEPAWAY_LOGGING: "keepaway_logging" >|
  < KEEPAWAY_START: "keepaway_start" >|
  < KEEPAWAY_WIDTH: "keepaway_width" >|
  < KICK_OFF_WAIT: "kick_off_wait" >|
  < KICK_POWER_RATE: "kick_power_rate" >|
  < KICK_RAND_FACTOR_L: "kick_rand_factor_l" >|
  < KICK_RAND_FACTOR_R: "kick_rand_factor_r" >|
  < LANDMARK_FILE: "landmark_file" >|
  < LOG_DATE_FORMAT: "log_date_format" >|
  < LOG_TIMES: "log_times" >|
  < MAX_BACK_TACKLE_POWER: "max_back_tackle_power" >|
  < MAX_DASH_ANGLE: "max_dash_angle" >|
  < MAX_DASH_POWER: "max_dash_power" >|
  < MAX_GOAL_KICKS: "max_goal_kicks" >|
  < MAX_TACKLE_POWER: "max_tackle_power" >|
  < MAXMOMENT: "maxmoment" >|
  < MAXNECKANG: "maxneckang" >|
  < MAXNECKMOMENT: "maxneckmoment" >|
  < MAXPOWER: "maxpower" >|
  < MIN_DASH_ANGLE: "min_dash_angle" >|
  < MIN_DASH_POWER: "min_dash_power" >|
  < MINMOMENT: "minmoment" >|
  < MINNECKANG: "minneckang" >|
  < MINNECKMOMENT: "minneckmoment" >|
  < MINPOWER: "minpower" >|
  < NR_EXTRA_HALFS: "nr_extra_halfs" >|
  < NR_NORMAL_HALFS: "nr_normal_halfs" >|
  < OFFSIDE_ACTIVE_AREA_SIZE: "offside_active_area_size" >|
  < OFFSIDE_KICK_MARGIN: "offside_kick_margin" >|
  < OLCOACH_PORT: "olcoach_port" >|
  < OLD_COACH_HEAR: "old_coach_hear" >|
  < PEN_ALLOW_MULT_KICKS: "pen_allow_mult_kicks" >|
  < PEN_BEFORE_SETUP_WAIT: "pen_before_setup_wait" >|
  < PEN_COACH_MOVES_PLAYERS: "pen_coach_moves_players" >|
  < PEN_DIST_X: "pen_dist_x" >|
  < PEN_MAX_EXTRA_KICKS: "pen_max_extra_kicks" >|
  < PEN_MAX_GOALIE_DIST_X: "pen_max_goalie_dist_x" >|
  < PEN_NR_KICKS: "pen_nr_kicks" >|
  < PEN_RANDOM_WINNER: "pen_random_winner" >|
  < PEN_READY_WAIT: "pen_ready_wait" >|
  < PEN_SETUP_WAIT: "pen_setup_wait" >|
  < PEN_TAKEN_WAIT: "pen_taken_wait" >|
  < PENALTY_SHOOT_OUTS: "penalty_shoot_outs" >|
  < PLAYER_ACCEL_MAX: "player_accel_max" >|
  < PLAYER_RAND: "player_rand" >|
  < PLAYER_SPEED_MAX_MIN: "player_speed_max_min" >|
  < PLAYER_WEIGHT: "player_weight" >|
  < POINT_TO_BAN: "point_to_ban" >|
  < POINT_TO_DURATION: "point_to_duration" >|
  < PORT: "port" >|
  < PRAND_FACTOR_L: "prand_factor_l" >|
  < PRAND_FACTOR_R: "prand_factor_r" >|
  < PROFILE: "profile" >|
  < PROPER_GOAL_KICKS: "proper_goal_kicks" >|
  < QUANTIZE_STEP: "quantize_step" >|
  < QUANTIZE_STEP_L: "quantize_step_l" >|
  < RECORD_MESSAGES: "record_messages" >|
  < RECOVER_DEC: "recover_dec" >|
  < RECOVER_DEC_THR: "recover_dec_thr" >|
  < RECOVER_INIT: "recover_init" >|
  < RECOVER_MIN: "recover_min" >|
  < RECV_STEP: "recv_step" >|
  < SAY_COACH_CNT_MAX: "say_coach_cnt_max" >|
  < SAY_COACH_MSG_SIZE: "say_coach_msg_size" >|
  < SAY_MSG_SIZE: "say_msg_size" >|
  < SEND_COMMS: "send_comms" >|
  < SEND_STEP: "send_step" >|
  < SEND_VI_STEP: "send_vi_step" >|
  < SENSE_BODY_STEP: "sense_body_step" >|
  < SIDE_DASH_RATE: "side_dash_rate" >|
  < SIMULATOR_STEP: "simulator_step" >|
  < SLOW_DOWN_FACTOR: "slow_down_factor" >|
  < SLOWNESS_ON_TOP_FOR_LEFT_TEAM: "slowness_on_top_for_left_team" >|
  < SLOWNESS_ON_TOP_FOR_RIGHT_TEAM: "slowness_on_top_for_right_team" >|
  < STAMINA_CAPACITY: "stamina_capacity" >|
  < STAMINA_MAX: "stamina_max" >|
  < START_GOAL_L: "start_goal_l" >|
  < START_GOAL_R: "start_goal_r" >|
  < STOPPED_BALL_VEL: "stopped_ball_vel" >|
  < SYNCH_MICRO_SLEEP: "synch_micro_sleep" >|
  < SYNCH_MODE: "synch_mode" >|
  < SYNCH_OFFSET: "synch_offset" >|
  < SYNCH_SEE_OFFSET: "synch_see_offset" >|
  < TACKLE_BACK_DIST: "tackle_back_dist" >|
  < TACKLE_CYCLES: "tackle_cycles" >|
  < TACKLE_DIST: "tackle_dist" >|
  < TACKLE_EXPONENT: "tackle_exponent" >|
  < TACKLE_POWER_RATE: "tackle_power_rate" >|
  < TACKLE_WIDTH: "tackle_width" >|
  < TEAM_ACTUATOR_NOISE: "team_actuator_noise" >|
  < TEAM_L_START: "team_l_start" >|
  < TEAM_R_START: "team_r_start" >|
  < TEXT_LOG_COMPRESSION: "text_log_compression" >|
  < TEXT_LOG_DATED: "text_log_dated" >|
  < TEXT_LOG_DIR: "text_log_dir" >|
  < TEXT_LOG_FIXED: "text_log_fixed" >|
  < TEXT_LOG_FIXED_NAME: "text_log_fixed_name" >|
  < TEXT_LOGGING: "text_logging" >|
  < USE_OFFSIDE: "use_offside" >|
  < VERBOSE: "verbose" >|
  < VISIBLE_ANGLE: "visible_angle" >|
  < VISIBLE_DISTANCE: "visible_distance" >|
  < WIND_ANG: "wind_ang" >|
  < WIND_DIR: "wind_dir" >|
  < WIND_FORCE: "wind_force" >|
  < WIND_NONE: "wind_none" >|
  < WIND_RAND: "wind_rand" >|
  < WIND_RANDOM: "wind_random" >|
  < C: "c">|
  < T: "t">|
  < R: "r">|
  < OB: "(">|
  < CB: ")">|
  < SEP: " ">|
  < NUM:(["-", "+"])?(["0"-"9"])*(".")?(["0"-"9"])+(["e", "E"](["-", "+"])?(["0"-"9"])+)? >|
  < NAM: ["a"-"z","A"-"Z","_",".","/","-","%","~"] ( ["a"-"z","A"-"Z","_","0"-"9",".","/","-","%","~"] )* >
}